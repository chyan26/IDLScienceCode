%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 18 0 612 791
%%Creator: Wind/U Xprinter Version 3.3.1 (linux_i32) (Compile Date: Jun 21 2000 10:56:23) (chyan)
%%Title: 
%%CreationDate:Tue Jun  3 11:14:12 2003
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%LanguageLevel: 1
%%EndComments
%%BeginProlog
/XPrinterDict dup 200 dict def load begin
/bdf{bind def}bind def
/ldf{load def}bdf
/m/rmoveto ldf
/l2/rlineto ldf
/gs/gsave ldf
/gr/grestore ldf
/np/newpath ldf
/sv/save ldf
/rs/restore ldf
/tl/translate ldf
/mt/matrix ldf
/l/length ldf
/z/dict ldf
/d/def ldf
/e/exch ldf
/a/array ldf
/ac/arc ldf
/an/arcn ldf
/b/begin ldf
/pi/putinterval ldf
/t/moveto ldf
/lo/lineto ldf
/st/stroke ldf
/p/add ldf
/s/sub ldf
/c/mul ldf
/v/div ldf
/cp/closepath ldf
/sl/scale ldf
/ff/findfont ldf
/mf/makefont ldf
/sf/setfont ldf
/f/fill ldf
/sw/setlinewidth ldf
/sc/setlinecap ldf
/sj/setlinejoin ldf
/sg/setgray ldf
/ski/ISOLatin1Encoding where{pop true}{false}ifelse d
/fcd{ff dup l z b{1 index /FID ne{d}{pop pop}ifelse}forall /Encoding ISOLatin1Encoding d currentdict end}bdf
/fdf{e definefont pop}bdf
/sdt 22 z d
sdt b
/tpm mt d
/tpt mt d
/tps mt d
/cps
{/pr2 e cvlit d
/pr1 e cvlit d
/npc pr1 l pr2 l p a d
npc 0 pr1 pi
npc pr1 l pr2 pi
npc cvx
}bdf
/rmx mt d
/frs
{72 0 rmx defaultmatrix dtransform
/yres e d /xres e d
xres dup c yres dup c p sqrt
}bdf
end
/sus 
{sdt b
/spf e d
/sag e d 
/ces e d
300 ces v sag /spf load
setscreen
end
}bdf
/spt 18 z d
spt b
/bts
{/ybit e d /xbit e d
/byv bstr ybit bwd c xbit 8 idiv
p get d
/mask 1 7 xbit 8 mod s bitshift d
byv mask and 0 ne
}bdf
end
/bsf
{spt b
/y e d /x e d
/xix x 1 p 2 v bpx c cvi d
/yix y 1 p 2 v bpy c cvi d
xix yix bts
{/onb onb 1 p d 1}
{/ofb ofb 1 p d 0}
ifelse
end
}bdf
/setpattern
{spt b
/csz e d
/agl e d
/bwd e d
/bpy e d
/bpx e d
/bstr e d
/onb 0 d /ofb 0 d
csz agl /bsf load
sus
{ }settransfer
ofb ofb onb p v setgray
end
}bdf
/picstr 500 string d
/inch{72 c}bdf
/DP{gs np 0 360 ac cp f gr}bdf
/DL{gs np t lo st gr}bdf
/RGB{setrgbcolor}bdf
/C{gs t show gr}bdf

/ren 12 z d
/REn
{ren b
/nwc e d
/nwf e d
/bft e d
/bfd bft ff d
/nf bfd maxlength z d
bfd
{e dup /FID ne 
{dup /Encoding eq
{e dup l a copy
nf 3 1 roll put}
{e nf 3 1 roll put}
ifelse
}
{pop pop}
ifelse
}forall
nf /FontName nwf put
nwc aload pop
nwc l 2 idiv
{nf /Encoding get 3 1 roll put}
repeat
nwf nf definefont pop
end
}d
/rots{gs t rotate show gr}bdf
/imdata 256 string def
/imstr1 1 string def
/imdecode{
currentfile imstr1 readhexstring pop 0 get 8 bitshift currentfile imstr1 readhexstring pop 0 get or {
currentfile imdata 
currentfile imstr1 readhexstring pop 0 get 8 bitshift currentfile imstr1 readhexstring pop 0 get or 
currentfile imstr1 readhexstring pop 0 get 
getinterval 
readhexstring pop pop
} repeat
imdata
} bdf
/setpagedevice {} def

%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1
%%BeginPageSetup
/#copies 1 def
sv
1.00 -1.00 sl
18.00 -774.00 tl
%%EndPageSetup
%%BoundingBox: (atend)
gs
/BEPS{
/b4e sv d
/dict_count countdictstack d
/op_count count 1 s d
userdict b
/showpage{}d
0 sg 0 sc
1 sw 0 sj
10 setmiterlimit [] 0 setdash np
/languagelevel where
{pop languagelevel
1 ne
{false setstrokeadjust false setoverprint
}if
}if
}bdf
/rect{ 
4 2 roll t
1 index 0 l2
0 e l2
neg 0 l2
cp
}bdf
/EEPS{
count op_count s{pop} repeat
countdictstack dict_count s{end} repeat 
b4e rs
}bdf
BEPS
-18.00 774.00 translate
1 -1 scale
0.00 rotate
1.00 1.00 sl
18.00 -18.00 tl
0.00 0.00 576.00 792.00 rect clip np
%%Title: Graphics produced by IDL
%%Creator: IDL Version 5.5 (linux x86)
%%CreationDate: Tue Jun  3 11:14:25 2003

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/margin 1.2 inch def
/noheader false def
/headersize 0.22 inch def
/bodyfontsize 6.8 def
/lines 71 def
/columns 91 def
/date (Tue Jun  3 11:14:25 2003) def
% File: prheader.ps
% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
% Based on header.ps file from a2ps package

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/bodyfont /Courier bodyfontsize getfont def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin margin 3 div def
/leftmargin margin 2 mul 3 div def
/topmargin margin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin			% upperx for left page
		dup pagewidth add		% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def

}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
/datewidth date stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add (Page 999) stringwidth pop add
      sub
   def


% Function newfile: init file name and reset page number for each new file.
/newfile
    { cleanup
      /filename xdef
      /filenamewidth filename stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage noheader and
      { sheetnumber }
      if
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.
/startpage
    { sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	    } if
	} if
      noheader not { printheader } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
      bodyfont setfont
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth (Page 999) stringwidth pop sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom filename stringwidth pop sub 2 div datewidth add
	      bodymargin 2 mul 
	   add 
	   headermargin
	rmoveto
        filename show						% file name
      grestore
    } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { /pagenum pagenum 1 add def
     twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function s: print a source line
/s  { gsave
        show
      grestore
      0 bodyfontsize neg rmoveto
    } bind def
%%EndProlog

/sheetside 0 def
/sheet 1 def
(sma_detect.pro) newfile
/pagenum 1 def
startpage
(1     PRO SMA_DETECT, START_FIELD, END_FIELD, SIGMA, CONFIG) s
(2             common share, dataset) s
(3             common share1, im3) s
(4             common share2, sf) s
(5             fwhm=[2.82,5.48,12,30.0]) s
(6             ;sigma=3.0) s
(7             ;start_field=76 ) s
(8             ;end_field=76) s
(9             ;config=4) s
(10            sf=3) s
(11            rate=fltarr\(5\)) s
(12            count=fltarr\(5\)) s
(13            count\(*\)=0) s
(14            rate\(*\)=0       ) s
(15            ) s
(16            dataset='SMA_sky1_100hr') s
(17            im1='/scr1/'+dataset+'/Fits/sma_') s
(18            im2=['a','b','c','d']) s
(19            im3='_030526_') s
(20            im4='.fits') s
(21            s1='/scr1/'+dataset+'/Data/submm_source') s
(22     ) s
(23            close,1) s
(24            openw,1,'/scr1/'+dataset+'/Detect/sma_detecion_'+im2\(config-1\)+'_'+strmid\(str) s
(      compress\(string\(sigma\),/remov\),0,3\)) s
(25            for i=start_field, end_field do begin) s
(26                    print,'Now processing image',i) s
(27    ) s
(28                    fitsfile=im1+im2\(config-1\)+im3+strcompress\(string\(i\),/remov\)+im4) s
(29                    sourcefile=s1+strcompress\(string\(i\),/remov\)) s
(30                    ) s
(31                    read_source,sourcefile,flux,x,y) s
(32                    im=readfits\(fitsfile\)) s
(33                    rms=stddev\(im\)) s
(34                    th_image_cont,im,level=[2*rms,3*rms],xrange=[-128,128]$) s
(35                            ,/aspect,yrange=[-128,128],/nobar,ct=0$) s
(36                            ,crange=[0.1*rms,5*rms]) s
(37                    oplot_source,flux,x,y,sigma,rms) s
(38    ) s
(39                    data=detect_count\(im,fwhm\(config-1\),sigma,rms,i,config\)) s
(40                    if data\(0\) eq -1 then begin) s
(41                            print,'No detection') s
(42                            rate\(0\)=n_elements\(x\)+rate\(0\)) s
(43                            ind=where\(flux ge sigma*rms,c\)) s
(44                            rate\(1\)=c+rate\(1\)) s
(45                    endif else begin        ) s
(46                            dd=d_rate\(flux,x,y,data\(0,*\),data\(1,*\),data\(2,*\),fwhm\(config-) s
(      1\),sigma,rms\)) s
(47                            for j=0, n_elements\(data\(0,*\)\)-1 do begin) s
(48                                    printf,format='\(f12.8,f10.4,f10.4,tr4,i3\)'$) s
(49                                            ,1,data\(0,j\),-data\(1,j\)*0.14,data\(2,j\)*0.14,i) s
(50                            endfor) s
(51                            count=dd+count) s
(52                    endelse) s
(53                    print,rate      ) s
(54                    print,count) s
(55            endfor) s
(56            ) s
(57            count=rate+count) s
(58            print,count) s
(59            close,1) s
(60    ) s
(61            openw,1,'/scr1/'+dataset+'/Detect/sma_count_'+im2\(config-1\)+'_'+strmid\(strcom) s
(      press\(string\(sigma\),/remov\),0,3\)) s
(62            printf,1,'Total No. of source\(s\) inputed',count\(0\)-100*\(end_field-start_field) s
(      +1\)) s
(63            printf,1,'No. of source\(s\) with f > 3-sigma:',count\(1\)) s
(64            printf,1,'No. of source\(s\) detected by FIND:',count\(2\)) s
(65            printf,1,'No. of source\(s\) f > 3-sigma and detected:',count\(3\)) s
(66            printf,1,'No. of source\(s\) f < 3-sigma but detected:',count\(4\)) s
(67            close,1 ) s
endpage
startpage
(68            ) s
(69    ) s
(70            resetplt,/all) s
(71            ) s
(72    end) s
(73     ) s
(74    FUNCTION DETECT_COUNT, IMAGE, FWHM ,SIGMA, RMS, FIELD_NO, CONFIG, DATA) s
(75    ;) s
(76    ;   COUNT) s
(77    ;       Return the detection counts, the first is the expected source) s
(78    ;       number over given sigma. The second is the detected source) s
(79    ;       number using FIND with flux over given sigma.  The last is the) s
(80    ;       number of detected and expected sources.) s
(81    ;) s
(82            fwhm=FWHM) s
(83            sigma=SIGMA) s
(84            im=IMAGE) s
(85    ) s
(86            common share2) s
(87            ) s
(88    ;       th_image_cont,im,level=[2*rms,3*rms],xrange=[-128,128]$) s
(89    ;               ,/aspect,yrange=[-128,128],/nobar,ct=0$) s
(90    ;               ,crange=[0.1*rms,5*rms]) s
(91                    ) s
(92            imm=smooth2\(im,fwhm/sf\)) s
(93            auto_find_sma,imm,fwhm,rms,sigma,x_a,y_a,f_a) s
(94            ;oplot,x_a-128,y_a-128,psym=6) s
(95    ) s
(96            if keyword_set\(x_a\) eq 0 then begin) s
(97                    data=-1) s
(98                    goto,here) s
(99            endif           ) s
(100   ) s
(101           avg_bg, 2, field_no, bg_image, config) s
(102           bb=smooth2\(bg_image,fwhm/sf\)) s
(103   ;window,1) s
(104   ;wset,1) s
(105   ;       th_image_cont,bg_image,level=[2*rms,3*rms],xrange=[-128,128]$) s
(106   ;               ,/aspect,yrange=[-128,128],/nobar,ct=0$) s
(107   ;               ,crange=[0.1*rms,5*rms]) s
(108   ) s
(109           auto_find_sma,bb,fwhm,rms/1.5,sigma,x_f,y_f,ff) s
(110   ;       oplot,x_f-128,y_f-128,psym=6) s
(111   ;wset,0         ) s
(112           ) s
(113           if keyword_set\(x_f\) eq 0 then begin) s
(114                   x_d=x_a) s
(115                   y_d=y_a) s
(116                   flux=f_a) s
(117           endif else begin        ) s
(118                   reject_false,x_a,y_a,f_a,x_f,y_f,ff,x_d,y_d,flux,rms) s
(119           endelse) s
(120   ) s
(121           if keyword_set\(x_d\) eq 0 then begin) s
(122                   data=-1) s
(123                   goto,here       ) s
(124           endif else begin) s
(125                   x_d=x_d-128) s
(126                   y_d=y_d-128) s
(127                   oplot,x_d,y_d,psym=5,color=255) s
(128                   data=fltarr\(3,n_elements\(x_d\)\)) s
(129                   data\(0,*\)=flux) s
(130                   data\(1,*\)=x_d) s
(131                   data\(2,*\)=y_d) s
(132           endelse) s
(133           ) s
(134           here:) s
(135           return,data) s
(136           ) s
(137   END) s
(138   ) s
endpage
EEPS
gr
%%PageTrailer
rs
%%BoundingBox: 18 0 612 791
showpage
%%Page: 2
%%BeginPageSetup
/#copies 1 def
sv
1.00 -1.00 sl
18.00 -774.00 tl
%%EndPageSetup
%%BoundingBox: (atend)
gs
/BEPS{
/b4e sv d
/dict_count countdictstack d
/op_count count 1 s d
userdict b
/showpage{}d
0 sg 0 sc
1 sw 0 sj
10 setmiterlimit [] 0 setdash np
/languagelevel where
{pop languagelevel
1 ne
{false setstrokeadjust false setoverprint
}if
}if
}bdf
/rect{ 
4 2 roll t
1 index 0 l2
0 e l2
neg 0 l2
cp
}bdf
/EEPS{
count op_count s{pop} repeat
countdictstack dict_count s{end} repeat 
b4e rs
}bdf
BEPS
-18.00 774.00 translate
1 -1 scale
0.00 rotate
1.00 1.00 sl
18.00 -18.00 tl
0.00 0.00 576.00 792.00 rect clip np
%%Title: Graphics produced by IDL
%%Creator: IDL Version 5.5 (linux x86)
%%CreationDate: Tue Jun  3 11:14:25 2003

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/margin 1.2 inch def
/noheader false def
/headersize 0.22 inch def
/bodyfontsize 6.8 def
/lines 71 def
/columns 91 def
/date (Tue Jun  3 11:14:25 2003) def
% File: prheader.ps
% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
% Based on header.ps file from a2ps package

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/bodyfont /Courier bodyfontsize getfont def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin margin 3 div def
/leftmargin margin 2 mul 3 div def
/topmargin margin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin			% upperx for left page
		dup pagewidth add		% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def

}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
/datewidth date stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add (Page 999) stringwidth pop add
      sub
   def


% Function newfile: init file name and reset page number for each new file.
/newfile
    { cleanup
      /filename xdef
      /filenamewidth filename stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage noheader and
      { sheetnumber }
      if
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.
/startpage
    { sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	    } if
	} if
      noheader not { printheader } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
      bodyfont setfont
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth (Page 999) stringwidth pop sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom filename stringwidth pop sub 2 div datewidth add
	      bodymargin 2 mul 
	   add 
	   headermargin
	rmoveto
        filename show						% file name
      grestore
    } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { /pagenum pagenum 1 add def
     twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function s: print a source line
/s  { gsave
        show
      grestore
      0 bodyfontsize neg rmoveto
    } bind def
%%EndProlog

/sheetside 0 def
/sheet 2 def
(sma_detect.pro) newfile
/pagenum 3 def
startpage
(139   ) s
(140   FUNCTION D_RATE, FLUX, X, Y, F_D, X_D, Y_D, FWHM, RMS, SIGMA, COUNT) s
(141           x=X) s
(142           y=Y) s
(143           x_d=X_D) s
(144           y_d=Y_D) s
(145           fwhm=FWHM) s
(146   ) s
(147           ) s
(148           dd=0   ;dd gives the detection no. for sources flux > 3-sigma and detected) s
(149           nd=0   ;ad gives the detection no. for sources flux < 3-sigma but detected) s
(150   ) s
(151           index=where\(flux ge rms*sigma, c, complement=ind_c\) ) s
(152   ) s
(153           if c ne 0 then begin) s
(154                   for i=0,n_elements\(x_d\)-1 do begin) s
(155                           r=\(x\(index\)-x_d\(i\)\)^2+\(y\(index\)-y_d\(i\)\)^2) s
(156                           if min\(r\) lt fwhm*5 then begin) s
(157                                   dd=dd+1) s
(158                           endif else begin) s
(159                                   dd=dd+0) s
(160                           endelse) s
(161                   endfor) s
(162           endif else begin) s
(163                   dd=dd+0) s
(164           endelse) s
(165           ) s
(166           if ind_c\(0\) eq -1 then goto, final) s
(167           if n_elements\(ind_c\) ne 0 then begin) s
(168                   for i=0,n_elements\(x_d\)-1 do begin) s
(169                           r=\(x\(ind_c\)-x_d\(i\)\)^2+\(y\(ind_c\)-y_d\(i\)\)^2) s
(170                           if min\(r\) lt fwhm*5 then begin) s
(171                                   nd=nd+1) s
(172                           endif else begin) s
(173                                   nd=nd+0) s
(174                           endelse) s
(175                   endfor) s
(176           endif else begin) s
(177                   nd=nd+0) s
(178           endelse) s
(179           final: ) s
(180   ) s
(181    ) s
(182           ) s
(183           count=fltarr\(5\)) s
(184           count\(0\)=n_elements\(x\)) s
(185           count\(1\)=c) s
(186           count\(2\)=n_elements\(x_d\)) s
(187           count\(3\)=dd) s
(188           count\(4\)=nd) s
(189           return,count) s
(190   ) s
(191   END) s
(192   ) s
(193   PRO READ_SOURCE, FILE, FLUX, X, Y) s
(194           file=FILE) s
(195           flux=FLUX) s
(196           x=X) s
(197           y=Y) s
(198           data=read_ascii\(file\)) s
(199           if n_elements\(data.field1\) gt 3 then begin) s
(200                   flux=reform\(data.field1\(0,*\)\)) s
(201                   x=-1*reform\(data.field1\(1,*\)\)/0.14) s
(202                   y=reform\(data.field1\(2,*\)\)/0.14) s
(203           endif else begin) s
(204                   flux=data.field1\(0\)) s
(205                   x=-1*data.field1\(1\)/0.14) s
(206                   y=data.field1\(2\)/0.14) s
(207           endelse) s
(208   END) s
(209   ) s
endpage
startpage
(210   PRO OPLOT_SOURCE, FLUX, X, Y, SIGMA, RMS) s
(211           flux=FLUX) s
(212           x=X) s
(213           y=Y) s
(214           sigma=SIGMA) s
(215           rms=RMS) s
(216           index=INDEX    ; sources where f > given sigma level) s
(217           no=NO          ; number of sources where f > given sigma level) s
(218           ind_c=IND_C    ; sources where f < given sigma level) s
(219           index=where\(flux ge sigma*rms, c, complement=ind_c\)) s
(220           ) s
(221   ) s
(222           if n_elements\(index\) eq 1 and index\(0\) eq -1 then goto, next) s
(223           if c ne 1 then begin) s
(224                   plots,x\(index\),y\(index\),psym=6,color=255) s
(225           endif else begin) s
(226                   plots,x\(index\),y\(index\),psym=6,color=255) s
(227           endelse) s
(228    ) s
(229           next:   ) s
(230           if ind_c\(0\) eq -1 then goto,final) s
(231           if n_elements\(ind_c\) ne 1 then begin) s
(232                   oplot,x\(ind_c\),y\(ind_c\),psym=1,color=255) s
(233           endif else begin) s
(234                   plots,x\(ind_c\),y\(ind_c\),psym=1,color=255) s
(235           endelse) s
(236           final:) s
(237           no=c) s
(238   END) s
(239   ) s
(240   PRO AUTO_FIND_SMA, IM, FWHM,RMS, SIGMA, X, Y, FLUX) s
(241           hmin=rms*sigma ) s
(242           sharplim=[0.07,1.0]) s
(243           roundlim=[-1000,1000.0]) s
(244           find,im,x,y,flux,sharp,round,hmin,fwhm,roundlim,sharplim,/silent) s
(245   END) s
(246   ) s
(247   PRO AVG_BG, BG_FIELD, FIELD, IMAGE, CONFIG) s
(248           common share;, dataset, im3) s
(249           common share1) s
(250           name1='/scr1/'+dataset+'/Background/sma_') s
(251           name2=['a','b','c','d']) s
(252           name3=im3) s
(253           name4='_bg') s
(254           name5='.fits') s
(255   ) s
(256           data=fltarr\(257,257\)) s
(257   ) s
(258           for i=1,bg_field do begin) s
(259                   filename=name1+name2\(config-1\)+name3+strcompress\(string\(field\),/remov) s
(      \)+name4+strcompress\(string\(i\),/remov\)+name5) s
(260                   im=readfits\(filename\)) s
(261                   data=im+data) s
(262           endfor) s
(263   ) s
(264           data=data/bg_field              ) s
(265   ) s
(266           image=data) s
(267   ) s
(268   END) s
(269   ) s
(270   PRO REJECT_FALSE, X, Y, F, X_F, Y_F, F_F, X_D, Y_D, FLUX, RMS) s
(271           flag=bytarr\(n_elements\(x\)\)) s
(272           flag\(*\)=1) s
(273           for i=0, n_elements\(x\)-1 do begin) s
(274                   r=\(x\(i\)-x_f\)^2+\(y\(i\)-y_f\)^2) s
(275                   ind=where\(r eq min\(r\)\)) s
(276                   if min\(r\) lt 5 and min\(abs\(f\(i\)-f_f\(ind\)\)\) lt 3*rms then begin  ) s
(277                   ;if min\(r\) lt 5 then begin      ) s
(278                           flag\(i\)=0) s
(279                   endif) s
endpage
EEPS
gr
%%PageTrailer
rs
%%BoundingBox: 18 0 612 791
showpage
%%Page: 3
%%BeginPageSetup
/#copies 1 def
sv
1.00 -1.00 sl
18.00 -774.00 tl
%%EndPageSetup
%%BoundingBox: (atend)
gs
/BEPS{
/b4e sv d
/dict_count countdictstack d
/op_count count 1 s d
userdict b
/showpage{}d
0 sg 0 sc
1 sw 0 sj
10 setmiterlimit [] 0 setdash np
/languagelevel where
{pop languagelevel
1 ne
{false setstrokeadjust false setoverprint
}if
}if
}bdf
/rect{ 
4 2 roll t
1 index 0 l2
0 e l2
neg 0 l2
cp
}bdf
/EEPS{
count op_count s{pop} repeat
countdictstack dict_count s{end} repeat 
b4e rs
}bdf
BEPS
-18.00 774.00 translate
1 -1 scale
0.00 rotate
1.00 1.00 sl
18.00 -18.00 tl
0.00 0.00 576.00 792.00 rect clip np
%%Title: Graphics produced by IDL
%%Creator: IDL Version 5.5 (linux x86)
%%CreationDate: Tue Jun  3 11:14:25 2003

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/margin 1.2 inch def
/noheader false def
/headersize 0.22 inch def
/bodyfontsize 6.8 def
/lines 71 def
/columns 91 def
/date (Tue Jun  3 11:14:25 2003) def
% File: prheader.ps
% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
% Based on header.ps file from a2ps package

% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/bodyfont /Courier bodyfontsize getfont def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin margin 3 div def
/leftmargin margin 2 mul 3 div def
/topmargin margin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin			% upperx for left page
		dup pagewidth add		% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def

}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
/datewidth date stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add (Page 999) stringwidth pop add
      sub
   def


% Function newfile: init file name and reset page number for each new file.
/newfile
    { cleanup
      /filename xdef
      /filenamewidth filename stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage noheader and
      { sheetnumber }
      if
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.
/startpage
    { sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	    } if
	} if
      noheader not { printheader } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
      bodyfont setfont
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth (Page 999) stringwidth pop sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom filename stringwidth pop sub 2 div datewidth add
	      bodymargin 2 mul 
	   add 
	   headermargin
	rmoveto
        filename show						% file name
      grestore
    } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { /pagenum pagenum 1 add def
     twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function s: print a source line
/s  { gsave
        show
      grestore
      0 bodyfontsize neg rmoveto
    } bind def
%%EndProlog

/sheetside 0 def
/sheet 3 def
(sma_detect.pro) newfile
/pagenum 5 def
startpage
(280           endfor) s
(281           ) s
(282           ind=where\(flag eq 1,c\)) s
(283           if c ne 0 then begin) s
(284                   x_d=reform\(x\(ind\)\)) s
(285                   y_d=reform\(y\(ind\)\)) s
(286                   flux=reform\(f\(ind\)\)) s
(287           endif else begin) s
(288                   goto, out) s
(289           endelse) s
(290           out:) s
(291   END) s
endpage

%%Trailer
cleanup
EEPS
gr
%%PageTrailer
rs
%%BoundingBox: 18 0 612 791
showpage
%%Trailer
%%Pages: 3
end
%%DocumentSuppliedResources: 
%%EOF
