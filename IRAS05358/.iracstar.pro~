
; This function read irac catalog into IDL and transform the RA DEC to X Y.
PRO IRACCATALOG, cat
   COMMON share,imgpath, mappath 
   loadconfig

   hd=headfits(imgpath+'s233ir_h2.fits')
   
   
   RESTORE,imgpath+'irac_i1_080509.db'
   ;[ra,dec,rnd,shp,aper,insky,outsky,mag,magerr,sky,skyerr,user_status]
   id=indgen(n_elements(pv_dat[0,*]))
   ra=reform(pv_dat[0,*])
   dec=reform(pv_dat[1,*])
   flux=1.049*10^((25.0-reform(pv_dat[7,*]))/2.5)
   fluxerr=10^((25.0-reform(pv_dat[8,*]))/2.5)
   ; factor 0.0021 is the factor transform MJy/sr to mJy/pixel
   mag=-2.5*alog10((0.0021*flux)/280900.0)
   magerr=reform(pv_dat[8,*])
   
   adxy,hd,ra,dec,x,y
   
   ind=where(x ge 0 and x le 1024 and y ge 0 and y le 1024)
   i1={id:id[ind],x:x[ind],y:y[ind],flux:flux[ind],fluxerr:fluxerr[ind],$
      mag:mag[ind],magerr:magerr[ind]}

   RESTORE,imgpath+'irac_i2_080509.db'
   ;[ra,dec,rnd,shp,aper,insky,outsky,mag,magerr,sky,skyerr,user_status]
   id=indgen(n_elements(pv_dat[0,*]))
   ra=reform(pv_dat[0,*])
   dec=reform(pv_dat[1,*])
   flux=1.050*10^((25.0-reform(pv_dat[7,*]))/2.5)
   fluxerr=10^((25.0-reform(pv_dat[8,*]))/2.5)
   mag=-2.5*alog10((0.0021*flux)/179700.0)
   magerr=reform(pv_dat[8,*])
  
   adxy,hd,ra,dec,x,y
   
   ind=where(x ge 0 and x le 1024 and y ge 0 and y le 1024)
   i2={id:id[ind],x:x[ind],y:y[ind],flux:flux[ind],fluxerr:fluxerr[ind],$
      mag:mag[ind],magerr:magerr[ind]}
   
   RESTORE,imgpath+'irac_i3_080509.db'
   ;[ra,dec,rnd,shp,aper,insky,outsky,mag,magerr,sky,skyerr,user_status]
   id=indgen(n_elements(pv_dat[0,*]))
   ra=reform(pv_dat[0,*])
   dec=reform(pv_dat[1,*])
   flux=1.058*10^((25.0-reform(pv_dat[7,*]))/2.5)
   fluxerr=10^((25.0-reform(pv_dat[8,*]))/2.5)
   mag=-2.5*alog10((0.0021*flux)/115000.0)
   magerr=reform(pv_dat[8,*])
   
   adxy,hd,ra,dec,x,y
   
   ind=where(x ge 0 and x le 1024 and y ge 0 and y le 1024)
   i3={id:id[ind],x:x[ind],y:y[ind],flux:flux[ind],fluxerr:fluxerr[ind],$
      mag:mag[ind],magerr:magerr[ind]}

   RESTORE,imgpath+'irac_i4_080509.db'
   ;[ra,dec,rnd,shp,aper,insky,outsky,mag,magerr,sky,skyerr,user_status]
   id=indgen(n_elements(pv_dat[0,*]))
   ra=reform(pv_dat[0,*])
   dec=reform(pv_dat[1,*])
   flux=1.068*10^((25.0-reform(pv_dat[7,*]))/2.5)
   fluxerr=10^((25.0-reform(pv_dat[8,*]))/2.5)
   mag=-2.5*alog10((0.0021*flux)/115000.0)
   magerr=reform(pv_dat[8,*])
   
   adxy,hd,ra,dec,x,y
   
   ind=where(x ge 0 and x le 1024 and y ge 0 and y le 1024)
   i4={id:id[ind],x:x[ind],y:y[ind],flux:flux[ind],fluxerr:fluxerr[ind],$
      mag:mag[ind],magerr:magerr[ind]}
   
   cat={i1:i1,i2:i2,i3:i3,i4:i4}     
END


; This program is used to 
PRO MERGECAT, wircam, irac, merge
   COMMON share,imgpath, mappath 
   loadconfig
   j=0
   i1flag=intarr(n_elements(irac.i1.x))
   i2flag=intarr(n_elements(irac.i2.x))
   i3flag=intarr(n_elements(irac.i3.x))
   i4flag=intarr(n_elements(irac.i4.x))
   
   i1flux=fltarr(n_elements(wircam.y))
   i2flux=fltarr(n_elements(wircam.y))
   i3flux=fltarr(n_elements(wircam.y))
   i4flux=fltarr(n_elements(wircam.y))
   
   i1mag=fltarr(n_elements(wircam.y))
   i2mag=fltarr(n_elements(wircam.y))
   i3mag=fltarr(n_elements(wircam.y))
   i4mag=fltarr(n_elements(wircam.y))
   
   i1fluxerr=fltarr(n_elements(wircam.y))
   i2fluxerr=fltarr(n_elements(wircam.y))
   i3fluxerr=fltarr(n_elements(wircam.y))
   i4fluxerr=fltarr(n_elements(wircam.y))

   i1magerr=fltarr(n_elements(wircam.y))
   i2magerr=fltarr(n_elements(wircam.y))
   i3magerr=fltarr(n_elements(wircam.y))
   i4magerr=fltarr(n_elements(wircam.y))
   
   for i=0,n_elements(wircam.mk)-1 do begin
      dist1=((wircam.x[i]-irac.i1.x)^2)+((wircam.y[i]-irac.i1.y)^2)
      dist2=((wircam.x[i]-irac.i2.x)^2)+((wircam.y[i]-irac.i2.y)^2)
      dist3=((wircam.x[i]-irac.i3.x)^2)+((wircam.y[i]-irac.i3.y)^2)
      dist4=((wircam.x[i]-irac.i4.x)^2)+((wircam.y[i]-irac.i4.y)^2)
      
      ind1=where((dist1 le 3.5) and (dist1 eq min(dist1)) and (i1flag eq 0),count1)
      ind2=where((dist2 le 3.5) and (dist2 eq min(dist2)) and (i2flag eq 0),count2)
      ind3=where((dist3 le 3.5) and (dist3 eq min(dist3)) and (i3flag eq 0),count3)
      ind4=where((dist4 le 3.5) and (dist4 eq min(dist4)) and (i4flag eq 0),count4)
      
      if count1 ne 0 then begin
         i1flux[i]=irac.i1.flux[ind1]
         i1mag[i]=irac.i1.mag[ind1]
         i1fluxerr[i]=irac.i1.fluxerr[ind1]
         i1magerr[i]=irac.i1.magerr[ind1]
         i1flag[ind1]=1
      endif else begin
         i1flux[i]=-999.0
         i1mag[i]=-999.0
         i1fluxerr[i]=-999.0
         i1magerr[i]=-999.0
      endelse

      if count2 ne 0 then begin
         i2flux[i]=irac.i2.flux[ind2]
         i2mag[i]=irac.i2.mag[ind2]
         i2fluxerr[i]=irac.i2.fluxerr[ind2]
         i2magerr[i]=irac.i2.magerr[ind2]
         i2flag[ind2]=1
      endif else begin
         i2flux[i]=-999.0
         i2mag[i]=-999.0
         i2fluxerr[i]=-999.0
         i2magerr[i]=-999.0
      endelse

      if count3 ne 0 then begin
         i3flux[i]=irac.i3.flux[ind3]
         i3mag[i]=irac.i3.mag[ind3]
         i3fluxerr[i]=irac.i3.fluxerr[ind3]
         i3magerr[i]=irac.i3.magerr[ind3]
         i3flag[ind3]=1
      endif else begin
         i3flux[i]=-999.0
         i3mag[i]=-999.0
         i3fluxerr[i]=-999.0
         i3magerr[i]=-999.0
      endelse
     
      if count4 ne 0 then begin
         i4flux[i]=irac.i4.flux[ind4]
         i4mag[i]=irac.i4.mag[ind4]
         i4fluxerr[i]=irac.i4.fluxerr[ind4]
         i4magerr[i]=irac.i4.magerr[ind4]
         i4flag[ind4]=1
      endif else begin
         i4flux[i]=-999.0
         i4mag[i]=-999.0
         i4fluxerr[i]=-999.0
         i4magerr[i]=-999.0
      endelse
    
      
   endfor
     
   ;ind=where(i1flux ge 0)
   ;getds9region,wircam.x[ind],wircam.y[ind],'irac1_dection.reg',color='red'
   
   merge={x:wircam.x,y:wircam.y,mj:wircam.mj,mh:wircam.mh,mk:wircam.mk,$
         mjerr:wircam.mjerr,mherr:wircam.mherr,mkerr:wircam.mkerr,$
         i1flux:i1flux,i2flux:i2flux,i3flux:i3flux,i4flux:i4flux,$
         i1mag:i1mag,i2mag:i2mag,i3mag:i3mag,i4mag:i4mag,$
         i1fluxerr:i1fluxerr,i2fluxerr:i2fluxerr,i3fluxerr:i3fluxerr,i4fluxerr:i4fluxerr,$
         i1magerr:i1magerr,i2magerr:i2magerr,i3magerr:i3magerr,i4magerr:i4magerr}

END

FUNCTION phertz2pmicron, micron
   
   c=double(299792458.00)
   con=(c/(c/micron)^2)/(1e06)

   return,con
END

PRO MKSED, cat
   COMMON share,imgpath, mappath 
   loadconfig

   ind=where( (cat.mj ge 0 and cat.mh ge 0 and cat.mk ge 0)$
            and (cat.i1flux ge 0 ) and (cat.mh-cat.mk le 1),count)
   ;ind=where((cat.mj ge 0 and cat.mh ge 0 and cat.mk ge 0)$
   ;         and (cat.i1flux ge 0 )
   print,count
   ; Transfer magitude to flux in the unit of mJy
   jflux=(10^((cat.mj[ind])/(-2.5)))*1594.0e3
   hflux=(10^((cat.mh[ind])/(-2.5)))*1024.0e3
   kflux=(10^((cat.mk[ind])/(-2.5)))*667.0e3
   
   ; Transform Fv to vFv
   jvfv=jflux*1e-23/phertz2pmicron(1.252)
   hvfv=hflux*1e-23/phertz2pmicron(1.631)
   kvfv=kflux*1e-23/phertz2pmicron(2.146)
   i1vfv=cat.i1flux[ind]*1e-23/phertz2pmicron(3.56)
   i2vfv=cat.i2flux[ind]*1e-23/phertz2pmicron(4.52)
   i3vfv=cat.i3flux[ind]*1e-23/phertz2pmicron(5.73)
   i4vfv=cat.i4flux[ind]*1e-23/phertz2pmicron(7.91)
   
   lamda=[1.252,1.631,2.145,3.6,4.5,5.8,8.0]
   
   
   for i=0,n_elements(jflux)-1 do begin
   ;for i=0,6 do begin
      vfv=[jvfv[i],hvfv[i],kvfv[i],i1vfv[i],i2vfv[i],i3vfv[i],i4vfv[i]]
      plot,lamda,vfv,/xlog,/ylog,psym=4,yrange=[min(vfv),max(vfv)]
      wait,0.5
   endfor
   
   
END


