
;+
; NAME:
;       MODELKLF
;
; PURPOSE:
;       This sunroutine is the program used to 
;
; CATEGORY:
;       Stellar luminosity function modeling 
;
; CALLING SEQUENCE:
;       modelklf, mass, klf, AGE=age, FACTOR=factor
;
; KEYWORD PARAMETERS:
;       MASS: Array that containts the stellar mass generated from IMF.
;          
;       AGE: Scalar of stellar age, in the unit of Myr (1e6).
;
;       FACTOR:   The dt/t factor for star formation history
;
; OPTIONAL INPUTS:
;
; OUTPUTS:
;       KLF - IDL structure contain arrays of data.
;         .MJ - Abosolute J band magnitude.
;         .MH - Abosolute H band magnitude.
;         .MK - Abosolute K band magnitude.
;         .MASS - Stellar mass.
;         .TEFF - Effective temperture.
;         .LO - The luminosity of star in the unit of solar luminosity.
;
; EXAMPLE:
;       
;
; MODIFICATION HISTORY:
;       Written by Chi-Hung Yan, Mar 2009.
;-
PRO KLFDATA, mass, age, mk, h, xh
  
  rm1=mass
  ; Make an array for K magnitude
  mk=fltarr(n_elements(rm1))
  flag=intarr(n_elements(rm1))
  
  ; Loading DM97 model as main PMS model
  t=age
  loadiso_dm,dm97_iso,age=t,av=0

  ; Load SDF model for the low mass part
  t=age
  loadiso_sdf,sdf_iso,age=t,av=0

  
  ; Find out the mass range of DM97 model
  ind=where(rm1 ge min(dm97_iso.mass) and rm1 le max(dm97_iso.mass))
  mk[ind]=interpol(dm97_iso.mk,dm97_iso.mass,rm1[ind])
  flag[ind]=1
  
  ; Use SDF model for high mass part
  ind=where(rm1 gt max(dm97_iso.mass) and rm1 le max(sdf_iso.mass))
  mk[ind]=interpol(sdf_iso.mk,sdf_iso.mass,rm1[ind])
  flag[ind]=1
  
  ; Reject the very massive part
  ind=where(flag eq 0)
  mk[ind]=-999
  ; Using DM97 model for low mass part
  ;ind=where(rm1 lt min(sdf_iso.mass))
  ;mk[ind]=interpol(dm97_iso.mk,dm97_iso.mass,rm1[ind])
   
  mag_min=-2
  mag_max=10
  bin=0.5
  
  h=histogram(mk,min=mag_min,max=mag_max,bin=bin)
  xh=(findgen(n_elements(h))*bin)+mag_min
END

PRO MODELKLF, mass, klf, age=age, factor=factor
 ; Check if the variable for storing isochrone is given
  if N_params() LT 1 then begin 
       print,'Syntax - MODELKLF, mass, klf, age=age'
       return
  endif
    
  ; Check the maximum value of tau
  if keyword_set(factor) then begin
    if factor gt 2 then begin
      print,'  Error - the value of factor should be less than 2.'
      return
    endif
    dt=factor*age
    t_start=age-(dt)/2.0
    t_end=dt/2+age
    t=age
    if t_start eq 0 then t_start=0.02
    
    
    
    ;print,t_start,age,t_end
    
    klfdata,mass, t_start, mk1, h1, xh1
    klfdata,mass, t, mk2, h2, xh2
    klfdata,mass, t_end, mk3, h3, xh3
    
    mmk=[mk1,mk2,mk3]
    mag_min=-2
    mag_max=10
    bin=0.5
  
    hh=histogram(mmk,min=mag_min,max=mag_max,bin=bin)
    xh=(findgen(n_elements(hh))*bin)+mag_min
    
    n=total(hh/3)
    ; Now, Regenerate the mk base on the total number
    ff=0
    for i=0,n_elements(xh)-1 do begin
      ind=where(mmk le xh[i]+(bin/2) and mmk ge xh[i]-(bin/2), count)
      if count ne 0 and hh[i] ge 3 then begin
        if ff eq 0 then begin
          ;print,randomu(seed,h[i])
          ;if hh[i]/3 lt 1 then hh[i]=3
          mk=mmk[ind[fix(count*randomu(seed,hh[i]/3))]]
          ff=1
        endif else begin
          ;if hh[i]/3 lt 1 then hh[i]=3
          mk=[mk,mmk[ind[fix(count*randomu(seed,hh[i]/3))]]]
        endelse
      endif
      ;print,xh[i],count,hh[i]/3
    endfor
    ;print,n_elements(mk),n
    h=hh/3.0
  endif else begin
    
  klfdata, mass, age, mk, h, xh
  
  
  
  ;salpeterimf,m1,n1,rm1
    ;print,total(h)
  endelse
  
  klf={h:h,xh:xh,mk:mk}
  ;ind=where(rm1 le max(iso.mass),)
  ;if count ne
END
